{"version":3,"file":"static/js/7203.9fd09f15.chunk.js","mappings":"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","sources":["webpack://invoive/./src/components/header/Header.module.css?f437","components/header/Header.js","pages/customers/customerContex/CustomerContext.js","pages/globalContext/GlobalContext.js","pages/invoices/invoiceContext/InvoiceContext.js","webpack://invoive/./src/pages/vendorUserSide/vendorUserSide.module.css?d278","pages/vendorUserSide/VendorUserSide.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__d+igc\",\"active\":\"Header_active__7nHMJ\",\"header_left\":\"Header_header_left__b5+S6\",\"header_right\":\"Header_header_right__Yp9r9\",\"right\":\"Header_right__b7qNX\",\"sign_in\":\"Header_sign_in__l1VlE\",\"portalprofile\":\"Header_portalprofile__Qf5Cm\",\"avatar_profile\":\"Header_avatar_profile__WRaZm\",\"navTitles\":\"Header_navTitles__hJeSy\",\"dropdownContainer\":\"Header_dropdownContainer__uA-2z\",\"dropdownLists\":\"Header_dropdownLists__enHds\",\"myNav\":\"Header_myNav__3EAW-\"};","import styles from \"./Header.module.css\";\nimport logo from \"../../assets/miratsLogo.png\";\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Tooltip,\n} from \"@mui/material\";\nimport { Avatar } from \"@nextui-org/react\";\nimport { useState } from \"react\";\nimport { Logout } from \"@mui/icons-material\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"../../FirebaseConfig\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nconst Header = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [user] = useAuthState(auth);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  // console.log(user);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const logOut = () => {\n    signOut(auth).then((data) => <Navigate to=\"/login\" />);\n  };\n  return (\n    <>\n      <div className={styles.header}>\n        <header>\n          <div className={styles.header_left}>\n            <figure>\n              <img src={logo} alt=\"\" />\n            </figure>\n            <div className={styles.navCenterBody}>\n              {/* <NavLink\n                to=\"/\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Dashboard</span>\n              </NavLink> */}\n\n              <NavLink\n                to=\"/invoices\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Invoices</span>\n              </NavLink>\n              <NavLink\n                to=\"/vendors\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Vendors</span>\n              </NavLink>\n              <NavLink\n                to=\"/vendor-invoice\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Vendor Invoices</span>\n              </NavLink>\n              <NavLink\n                to=\"/client-report\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Client Report</span>\n              </NavLink>\n              <NavLink\n                to=\"/clients\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Clients</span>\n              </NavLink>\n              {/* <NavLink\n                to=\"/bank\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Bank</span>\n              </NavLink>\n              <NavLink\n                to=\"/companies\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Companies</span>\n              </NavLink>\n              <NavLink\n                to=\"/expense\"\n                className={({ isActive }) => (isActive ? styles.active : \"\")}\n              >\n                <span className={styles.nav_name}>Expense</span>\n              </NavLink> */}\n              <span className={styles.dropdownContainer}>\n                <span className={styles.myNav}>others</span>\n                <ul className={styles.dropdownLists}>\n                  <li>\n                    <NavLink\n                      to=\"/bank\"\n                      className={({ isActive }) =>\n                        isActive ? styles.active : \"\"\n                      }\n                    >\n                      <span className={styles.nav_name}>Bank</span>\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      to=\"/companies\"\n                      className={({ isActive }) =>\n                        isActive ? styles.active : \"\"\n                      }\n                    >\n                      <span className={styles.nav_name}>Companies</span>\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      to=\"/expense\"\n                      className={({ isActive }) =>\n                        isActive ? styles.active : \"\"\n                      }\n                    >\n                      <span className={styles.nav_name}>Expense</span>\n                    </NavLink>\n                  </li>\n                </ul>\n              </span>\n            </div>\n          </div>\n          <div className={styles.right}>\n            <section>\n              {/* <Link className={styles.create_company} to=\"/create-company\">\n                Create Company\n              </Link> */}\n            </section>\n            <section className={styles.sign_in}>\n              {/* <section className={styles.sign_in_details}>\n                <p>Rohan Gupta</p>\n                <p>Recruitment Coordinator</p>\n              </section> */}\n\n              <Box>\n                <Tooltip title=\"Account settings\">\n                  <IconButton\n                    onClick={handleClick}\n                    size=\"small\"\n                    sx={{ ml: 2 }}\n                    aria-controls={open ? \"account-menu\" : undefined}\n                    aria-haspopup=\"true\"\n                    aria-expanded={open ? \"true\" : undefined}\n                  >\n                    {/* <Avatar>\n                      <figure className={styles.portalprofile}>\n                        <img\n                          src={steve}\n                          alt=\"profileimg\"\n                          className={styles.avatar_img}\n                        />\n                      </figure>\n                    </Avatar> */}\n                    <Avatar\n                      size=\"lg\"\n                      //   src={steve}\n                      //   color=\"primary\"\n                      bordered\n                      zoomed\n                      className={styles.avatar_img}\n                    />\n                  </IconButton>\n                </Tooltip>\n              </Box>\n              <Menu\n                anchorEl={anchorEl}\n                id=\"account-menu\"\n                open={open}\n                onClose={handleClose}\n                onClick={handleClose}\n                PaperProps={{\n                  elevation: 0,\n                  sx: {\n                    overflow: \"visible\",\n                    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n                    mt: 1.5,\n                    \"& .MuiAvatar-root\": {\n                      width: 32,\n                      height: 32,\n                      ml: -0.5,\n                      mr: 1,\n                    },\n                    \"&:before\": {\n                      content: '\"\"',\n                      display: \"block\",\n                      position: \"absolute\",\n                      top: 0,\n                      right: 14,\n                      width: 10,\n                      height: 10,\n                      bgcolor: \"background.paper\",\n                      transform: \"translateY(-50%) rotate(45deg)\",\n                      zIndex: 0,\n                    },\n                  },\n                }}\n                transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n                anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n              >\n                <MenuItem>\n                  <Avatar\n                    size=\"sm\"\n                    // src={steve}\n                    // color=\"primary\"\n                    bordered\n                    className={styles.avatar_img}\n                  />{\" \"}\n                  <span className={styles.avatar_profile}>{user?.email}</span>\n                </MenuItem>\n                <MenuItem onClick={logOut}>\n                  <ListItemIcon>\n                    <Logout fontSize=\"small\" />\n                  </ListItemIcon>\n                  Logout\n                </MenuItem>\n              </Menu>\n            </section>\n          </div>\n        </header>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UseGlobalContext } from \"../../globalContext/GlobalContext\";\nconst CustomerContextProvider = createContext();\nexport const useCustomerContext = () => {\n  return useContext(CustomerContextProvider);\n};\nconst CustomerContext = ({ children }) => {\n  const navigate = useNavigate();\n  const { setSnackbar } = UseGlobalContext();\n  const [customerInputData, setCustomerInputData] = useState({\n    billing_address: { place_of_supply: \"INTERNATIONAL\" },\n    shipping_address: { place_of_supply: \"INTERNATIONAL\" },\n  });\n  const [disableBTN, setDisableBTN] = useState(false);\n  const [allCustomerData, setAllCustomerData] = useState([]);\n\n  const handleChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const customerBillingAddressChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      billing_address: {\n        ...prev.billing_address,\n        [e.target.name]: e.target.value,\n      },\n    }));\n  };\n  const customerShippingAddressChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      shipping_address: {\n        ...prev.shipping_address,\n        [e.target.name]: e.target.value,\n      },\n    }));\n  };\n  const getAllCustomerData = useCallback(() => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-customer\")\n      .then((res) => {\n        setAllCustomerData(res?.data);\n      })\n      .catch((err) => console.log(err));\n  }, [allCustomerData]);\n  useEffect(() => {\n    getAllCustomerData();\n  }, []);\n  const submitAddCustomer = () => {\n    console.log(\"submit\");\n    setDisableBTN(true);\n    navigate(\"/clients\");\n    axios\n      .post(\n        \"https://finance.miratsoneservices.com/api/create-customer\",\n        customerInputData\n      )\n      .then((res) => {\n        console.log(res.data);\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-tax-information\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.tax_information,\n          }\n        );\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-billing-address\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.billing_address,\n          }\n        );\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-shipping_address\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.shipping_address,\n          }\n        );\n        axios\n          .post(\n            \"https://finance.miratsoneservices.com/api/create-customer-bank-details\",\n            {\n              customer_id: res.data.customer_id,\n              ...customerInputData?.bank_details,\n            }\n          )\n          .then(\n            (data) => getAllCustomerData(),\n            setDisableBTN(false),\n            setSnackbar({\n              open: true,\n              severity: \"success\",\n              msg: \"Customer Added Successfully!\",\n            })\n          );\n      })\n      .catch((err) => console.log(err));\n\n    //   .catch((err) => console.log(err));\n\n    // axios\n    //   .post(\"https://finance.miratsoneservices.com/api/create-customer\", customerInputData)\n    //   .then(() => alert(\"success\"))\n    //   .catch((err) => console.log(err));\n  };\n  const value = {\n    handleChange,\n    disableBTN,\n    setDisableBTN,\n    customerInputData,\n    getAllCustomerData,\n    setCustomerInputData,\n    customerBillingAddressChange,\n    customerShippingAddressChange,\n    submitAddCustomer,\n    allCustomerData,\n    setAllCustomerData,\n  };\n  return (\n    <CustomerContextProvider.Provider value={value}>\n      {children}\n    </CustomerContextProvider.Provider>\n  );\n};\n\nexport default CustomerContext;\n","import axios from \"axios\";\nimport { listAll, ref } from \"firebase/storage\";\nimport React, { createContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { storage } from \"../../FirebaseConfig\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nconst GlobalContextProvider = createContext();\nexport const UseGlobalContext = () => {\n  return useContext(GlobalContextProvider);\n};\nconst GlobalContext = ({ children }) => {\n  const [bankTransaction, setBankTransaction] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"\",\n    msg: \"\",\n  });\n  const [getingImgFromFolder, setGetingImgFromFolder] = useState([]);\n  const [exportExcel, setExportExcel] = useState([]);\n  const [disableBtn, setDisableBtn] = useState(false);\n\n  const getBankTransaction = () => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-bank-transaction\")\n      .then((data) => {\n        setBankTransaction(data?.data);\n      });\n  };\n\n  useEffect(() => {\n    getBankTransaction();\n    listAll(ref(storage, ref(`bank_statement`))).then((res) => {\n      res.prefixes.forEach((folderRef) => {\n        setGetingImgFromFolder((prev) => [...prev, folderRef.name]);\n      });\n      res.items.forEach((itemref) => {\n        console.log(itemref);\n      });\n    });\n  }, []);\n\n  // console.log(bankTransaction);\n  let name = \"sonumonu\";\n  const value = {\n    bankTransaction,\n    name,\n    getingImgFromFolder,\n    setGetingImgFromFolder,\n    getBankTransaction,\n    setSnackbar,\n    disableBtn,\n    setDisableBtn,\n  };\n  // snackbar\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbar({ open: false });\n  };\n  return (\n    <GlobalContextProvider.Provider value={value}>\n      {children}\n      <Snackbar\n        open={snackbar?.open}\n        autoHideDuration={4000}\n        onClose={handleClose}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={snackbar?.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar?.msg}\n        </Alert>\n      </Snackbar>\n    </GlobalContextProvider.Provider>\n  );\n};\n\nexport default GlobalContext;\n","import axios from \"axios\";\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nconst InvoiceContextProvider = createContext();\nexport const useInvoiceContext = () => {\n  return useContext(InvoiceContextProvider);\n};\nconst InvoiceContext = ({ children }) => {\n  const [allCompanyData, setAllCompanyData] = useState([]);\n  const [signatureData, setSignatureData] = useState([]);\n  const [allInvoicesData, setAllInvoicesData] = useState([]);\n  const fetchAllInvoicesData = useCallback(() => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-company\")\n      .then((res) => setAllCompanyData(res?.data?.reverse()))\n      .catch((err) => console.log(err));\n  }, [allCompanyData]);\n  const fetchAllCompanyData = useCallback(() => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-invoice\")\n      .then((res) => setAllInvoicesData(res?.data?.reverse()))\n      .catch((err) => console.log(err));\n  }, [allInvoicesData]);\n  function fetchAllSignatureData(e) {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-signature\")\n      .then((res) => setSignatureData(res?.data))\n      .catch((err) => console.log(err));\n  }\n  useEffect(() => {\n    fetchAllInvoicesData();\n    fetchAllCompanyData();\n    fetchAllSignatureData();\n  }, []);\n\n  const value = {\n    allCompanyData,\n    allInvoicesData,\n    setAllCompanyData,\n    fetchAllCompanyData,\n    fetchAllInvoicesData,\n    fetchAllSignatureData,\n    signatureData,\n  };\n  return (\n    <InvoiceContextProvider.Provider value={value}>\n      {children}\n    </InvoiceContextProvider.Provider>\n  );\n};\n\nexport default InvoiceContext;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"vendorUserSide_mainContainer__gfy38\",\"header\":\"vendorUserSide_header__1kGZe\",\"containerBody\":\"vendorUserSide_containerBody__PRVoh\",\"bodyLeft\":\"vendorUserSide_bodyLeft__huVtB\",\"bodyRight\":\"vendorUserSide_bodyRight__DT0MQ\",\"bodyLeftTop\":\"vendorUserSide_bodyLeftTop__6lzwG\",\"bodyLeftBottom\":\"vendorUserSide_bodyLeftBottom__42sVf\",\"invoice_table\":\"vendorUserSide_invoice_table__kfJkm\",\"bodyLeftTopHeader\":\"vendorUserSide_bodyLeftTopHeader__AiJXN\",\"addressContainer\":\"vendorUserSide_addressContainer__JiWnw\",\"bodyRightHeader\":\"vendorUserSide_bodyRightHeader__VMQgS\",\"bodyRightTop\":\"vendorUserSide_bodyRightTop__jSVqL\",\"emailContainer\":\"vendorUserSide_emailContainer__JgOy4\",\"btnContainer\":\"vendorUserSide_btnContainer__x7MXo\",\"bodyRightBottom\":\"vendorUserSide_bodyRightBottom__6xx36\",\"bodyRightBottomHeader\":\"vendorUserSide_bodyRightBottomHeader__45x9m\",\"displayContacts\":\"vendorUserSide_displayContacts__XzAVy\",\"displayContactsContainer\":\"vendorUserSide_displayContactsContainer__i8BCO\",\"contactActions\":\"vendorUserSide_contactActions__dDPw3\",\"contactLeft\":\"vendorUserSide_contactLeft__3s3xO\",\"addContact\":\"vendorUserSide_addContact__qyXlY\",\"modalInnerContainer\":\"vendorUserSide_modalInnerContainer__aeDx+\",\"inputContainer\":\"vendorUserSide_inputContainer__nkLaG\",\"tabContainer\":\"vendorUserSide_tabContainer__PBO9Z\",\"light\":\"vendorUserSide_light__FDsC-\",\"active\":\"vendorUserSide_active__v5ofg\",\"modalPaymentContainer\":\"vendorUserSide_modalPaymentContainer__gFYag\",\"modalPayButton\":\"vendorUserSide_modalPayButton__TsXsw\",\"downloadBTN\":\"vendorUserSide_downloadBTN__G7Goz\",\"paymentSwitchActive\":\"vendorUserSide_paymentSwitchActive__whDcM\"};","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useCustomerContext } from \"../customers/customerContex/CustomerContext\";\nimport { useInvoiceContext } from \"../invoices/invoiceContext/InvoiceContext\";\nimport styles from \"./vendorUserSide.module.css\";\nimport loader from \"../../assets/loader.gif\";\nimport { styled } from \"@mui/system\";\nimport miratsLoGo from \"../../assets/miratsLogo.png\";\nimport TablePaginationUnstyled, {\n  tablePaginationUnstyledClasses as classes,\n} from \"@mui/base/TablePaginationUnstyled\";\nimport Header from \"../../components/header/Header\";\nimport userProfilePic from \"../../assets/userProfilePic.png\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport cx from \"classnames\";\nimport { GoCreditCard } from \"react-icons/go\";\nimport { Email } from \"@mui/icons-material\";\nimport GooglePayButton from \"@google-pay/button-react\";\nimport { MdFileDownload } from \"react-icons/md\";\nimport { utils, writeFile } from \"xlsx\";\nimport CryptoJS from \"crypto-js\";\nimport { UseGlobalContext } from \"../globalContext/GlobalContext\";\nconst CustomTablePagination = styled(TablePaginationUnstyled)`\n  & .MuiTablePaginationUnstyled-toolbar {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    gap: 12px;\n    padding: 0.5em 0em;\n\n    @media (min-width: 768px) {\n      flex-direction: row;\n      align-items: center;\n    }\n  }\n\n  & .MuiTablePaginationUnstyled-selectLabel {\n    margin: 0;\n  }\n\n  & .MuiTablePaginationUnstyled-select {\n    padding: 0.1em 1em;\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n      rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n    border: none;\n    font-weight: 700;\n    font-size: 14px;\n    color: #484848;\n    outline: none;\n  }\n\n  & .MuiTablePaginationUnstyled-displayedRows {\n    margin: 0;\n\n    @media (min-width: 768px) {\n      margin-left: auto;\n    }\n  }\n\n  & .MuiTablePaginationUnstyled-spacer {\n    display: none;\n  }\n\n  & .MuiTablePaginationUnstyled-actions {\n    display: flex;\n    gap: 0.5rem;\n    padding: 0.5em;\n  }\n\n  & .MuiTablePaginationUnstyled-actions button {\n    padding: 0.1em 0.5em;\n    border: 1px solid #828282;\n    cursor: pointer;\n    background-color: white;\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n      rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n    border: none;\n  }\n\n  & .MuiTablePaginationUnstyled-actions span {\n    // padding: 0 0.8em;\n    padding: 1em;\n    color: #484848;\n    font-weight: 700;\n  }\n`;\n// *! Do not touch this else the modal style will get affected\n//  *? it has multiple component for table switch\nconst myModalStyles = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 400,\n  bgcolor: \"background.paper\",\n  border: \"none\",\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n};\nconst myPaymentModalStyles = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  height: 200,\n  bgcolor: \"background.paper\",\n  border: \"none\",\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n};\nconst UnpaidInvoice = () => {\n  let { currentUserId } = useParams();\n  //*TODO Context states\n  let { allInvoicesData } = useInvoiceContext();\n  const { allCustomerData } = useCustomerContext();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [open, setOpen] = React.useState(false);\n  const [modalData, setModalData] = useState({});\n  const decryptText = (encryptText) => {\n    var reb64 = CryptoJS.enc.Hex.parse(encryptText);\n    var bytes = reb64.toString(CryptoJS.enc.Base64);\n    var decrypt = CryptoJS.AES.decrypt(bytes, \"Mirats\");\n    var plain = decrypt.toString(CryptoJS.enc.Utf8);\n    return plain;\n  };\n  const handleOpen = (e, data) => {\n    setOpen(true);\n    setModalData(data);\n  };\n  const handleClose = () => {\n    setOpen(false);\n\n    setModalData({});\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleExportToExcel = (e) => {\n    var elt = document.getElementById(\"table-to-xls-DATA\");\n    var wb = utils.table_to_book(elt, { sheet: \"Sheet JS\" });\n    return writeFile(wb, `UnpaidInvoice.xlsx`);\n  };\n  console.log(modalData);\n  return (\n    <>\n      <span className={styles.downloadBTN} onClick={handleExportToExcel}>\n        <MdFileDownload size={20} /> Download Statement\n      </span>\n\n      <table aria-label=\"custom pagination table\" id=\"table-to-xls-DATA\">\n        <thead>\n          <tr>\n            <th>\n              Date <p>Invoice #</p>\n            </th>\n\n            <th>\n              Amount\n              <p> Total due</p>\n            </th>\n            <th>Status</th>\n            <th>Age</th>\n            <th>Type</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {(rowsPerPage > 0\n            ? allInvoicesData\n                ?.filter(\n                  (uData) =>\n                    uData?.customer_id == decryptText(String(currentUserId))\n                )\n                ?.filter((status) => status?.payment_status == \"unpaid\")\n                ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : allInvoicesData\n          )\n            ?.filter(\n              (uData) =>\n                uData?.customer_id == decryptText(String(currentUserId))\n            )\n            ?.filter((status) => status?.payment_status == \"unpaid\")\n            ?.map((data, ind) => (\n              <tr\n                key={ind}\n                className={\n                  data?.status?.toLowerCase() === \"canceled\" ||\n                  data?.status?.toLowerCase() === \"cancelled\"\n                    ? styles.cancelledRow\n                    : \"\"\n                }\n              >\n                {allCustomerData\n                  ?.filter((cust) => cust?.customer_id == data?.customer_id)\n                  ?.map((elm, ind) => (\n                    <>\n                      <td>\n                        {/* <h1>{data?.sale_by}</h1> */}\n\n                        {data?.invoice_date}\n\n                        <p>{data?.invoice_number}</p>\n                      </td>\n                      <td>\n                        <p className={styles.light}>\n                          {data?.currency_type ? data?.currency_type : \"INR\"}{\" \"}\n                          {data?.total_amount?.toFixed(2)}\n                        </p>\n                      </td>\n                      <td>\n                        <p>\n                          <span>{data?.payment_status?.toUpperCase()}</span>\n                        </p>\n                      </td>\n                      <td className={styles.warning}>\n                        <Link to={data?.invoice_number}>\n                          {/* {elm?.payment_status\n                                ? elm?.payment_status\n                                : \"unpaid\"} */}\n                          {/* {data?.payment_status === \"paid\"\n                                ? \"PAID\"\n                                : data?.currency_type\n                                ? `${data?.currency_type} ${data?.total_amount} not paid`\n                                : \"INR\"} */}\n                        </Link>\n\n                        {data?.payment_status === \"paid\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            {/* Overdue by{\" \"} */}\n                            {Math.round(\n                              Number(\n                                new Date()?.getTime() -\n                                  new Date(data?.invoice_date)?.getTime()\n                              ) /\n                                (1000 * 3600 * 24)\n                            )}{\" \"}\n                            days\n                          </p>\n                        )}\n                      </td>\n                      <td>\n                        <span\n                          className={\n                            data?.status?.toLowerCase() === \"active\"\n                              ? styles.active\n                              : styles.canceled\n                          }\n                        >\n                          {data?.status}\n                        </span>\n                      </td>\n                      <td onClick={(e) => handleOpen(e, data)}>\n                        <GoCreditCard size={20} />\n                      </td>\n                    </>\n                  ))}\n              </tr>\n            ))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <CustomTablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\n              colSpan={3}\n              count={\n                allInvoicesData\n                  ?.filter(\n                    (uData) =>\n                      uData?.customer_id == decryptText(String(currentUserId))\n                  )\n                  ?.filter((status) => status?.payment_status == \"unpaid\")\n                  ?.length\n              }\n              rowsPerPage={rowsPerPage}\n              page={page}\n              componentsProps={{\n                select: {\n                  \"aria-label\": \"rows per page\",\n                },\n                actions: {\n                  showFirstButton: true,\n                  showLastButton: true,\n                },\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </tr>\n        </tfoot>\n      </table>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={myPaymentModalStyles}>\n          <h2 style={{ textAlign: \"center\" }}>Pay Invoice</h2>\n          <section className={styles.modalPaymentContainer}>\n            <section className={styles.leftSection}>\n              <p>Invoice</p>\n              <h4>{modalData?.invoice_number}</h4>\n            </section>\n            <section>\n              <p>Amount Due</p>\n              <h4>\n                {modalData?.currency_type ? modalData?.currency_type : \"INR\"}{\" \"}\n                {modalData?.total_amount}\n              </h4>\n            </section>\n          </section>\n          <div className={styles.modalPayButton}>\n            <GooglePayButton\n              environment=\"TEST\"\n              paymentRequest={{\n                apiVersion: 2,\n                apiVersionMinor: 0,\n                allowedPaymentMethods: [\n                  {\n                    type: \"CARD\",\n                    parameters: {\n                      allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                      allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\n                    },\n                    tokenizationSpecification: {\n                      type: \"PAYMENT_GATEWAY\",\n                      parameters: {\n                        gateway: \"example\",\n                        gatewayMerchantId: \"exampleGatewayMerchantId\",\n                      },\n                    },\n                  },\n                ],\n                merchantInfo: {\n                  merchantId: \"12345678901234567890\",\n                  merchantName: \"Demo Merchant\",\n                },\n                transactionInfo: {\n                  totalPriceStatus: \"FINAL\",\n                  totalPriceLabel: \"Total\",\n                  totalPrice: String(\n                    modalData?.currency_type\n                      ? modalData?.current_USD_price * modalData?.total_amount\n                      : modalData?.total_amount\n                  ),\n                  currencyCode: \"INR\",\n                  countryCode: \"IN\",\n                },\n                shippingAddressRequired: false,\n                callbackIntents: [\"PAYMENT_AUTHORIZATION\"],\n              }}\n              onLoadPaymentData={(paymentRequest) => {\n                console.log(\"load payment data\", paymentRequest);\n              }}\n              onPaymentAuthorized={(paymentData) => {\n                console.log(paymentData);\n                return { transactionState: \"SUCCESS\" };\n              }}\n              existingPaymentMethodRequired=\"false\"\n              buttonColor=\"white\"\n              buttonType=\"pay\"\n            />\n          </div>\n        </Box>\n      </Modal>\n    </>\n  );\n};\nconst PaidInvoice = () => {\n  let { currentUserId } = useParams();\n  const [contactsData, setContactsData] = useState([]);\n  let { allInvoicesData } = useInvoiceContext();\n  const { allCustomerData } = useCustomerContext();\n  const [page, setPage] = useState(0);\n  const [searchQuery, setsearchQuery] = useState();\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [filters, setFilters] = useState({});\n  const decryptText = (encryptText) => {\n    var reb64 = CryptoJS.enc.Hex.parse(encryptText);\n    var bytes = reb64.toString(CryptoJS.enc.Base64);\n    var decrypt = CryptoJS.AES.decrypt(bytes, \"Mirats\");\n    var plain = decrypt.toString(CryptoJS.enc.Utf8);\n    return plain;\n  };\n  // how to convert json data to csv file ?\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleExportToExcel = (e) => {\n    var elt = document.getElementById(\"table-to-xls-DATA-unpaid\");\n    var wb = utils.table_to_book(elt, { sheet: \"Sheet JS\" });\n    return writeFile(wb, `PaidInvoice.xlsx`);\n  };\n  return (\n    <>\n      <span className={styles.downloadBTN} onClick={handleExportToExcel}>\n        <MdFileDownload\n          size={20}\n          onClick={handleExportToExcel}\n          fontWeight=\"400\"\n        />\n        Download Statement\n      </span>\n      <table aria-label=\"custom pagination table\" id=\"table-to-xls-DATA-unpaid\">\n        <thead>\n          <tr>\n            <th>\n              Date <p>Invoice #</p>\n            </th>\n\n            <th>\n              Amount\n              <p> Total due</p>\n            </th>\n            <th>Status</th>\n            <th>Age</th>\n            <th>Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {(rowsPerPage > 0\n            ? allInvoicesData\n                ?.filter(\n                  (uData) =>\n                    uData?.customer_id == decryptText(String(currentUserId))\n                )\n                ?.filter((status) => status?.payment_status == \"paid\")\n                ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : allInvoicesData\n          )\n            ?.filter(\n              (uData) =>\n                uData?.customer_id == decryptText(String(currentUserId))\n            )\n            ?.filter((status) => status?.payment_status == \"paid\")\n            ?.map((data, ind) => (\n              <tr\n                key={ind}\n                className={\n                  data?.status?.toLowerCase() === \"canceled\" ||\n                  data?.status?.toLowerCase() === \"cancelled\"\n                    ? styles.cancelledRow\n                    : \"\"\n                }\n              >\n                {allCustomerData\n                  ?.filter((cust) => cust?.customer_id == data?.customer_id)\n\n                  ?.filter((sData) =>\n                    !filters?.payment_status\n                      ? sData\n                      : data?.payment_status?.toLowerCase() ==\n                        filters?.payment_status?.toLowerCase()\n                  )\n                  ?.map((elm, ind) => (\n                    <>\n                      <td>\n                        {/* <h1>{data?.sale_by}</h1> */}\n\n                        {data?.invoice_date}\n\n                        <p>{data?.invoice_number}</p>\n                      </td>\n                      <td>\n                        <p className={styles.light}>\n                          {data?.currency_type ? data?.currency_type : \"INR\"}{\" \"}\n                          {data?.total_amount?.toFixed(2)}\n                        </p>\n                      </td>\n                      <td>\n                        <p>\n                          <span>{data?.payment_status}</span>\n                        </p>\n                      </td>\n                      <td className={styles.warning}>\n                        <Link to={data?.invoice_number}>\n                          {/* {elm?.payment_status\n                                ? elm?.payment_status\n                                : \"unpaid\"} */}\n                          {/* {data?.payment_status === \"paid\"\n                                ? \"PAID\"\n                                : data?.currency_type\n                                ? `${data?.currency_type} ${data?.total_amount} not paid`\n                                : \"INR\"} */}\n                        </Link>\n\n                        {data?.payment_status === \"paid\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            Overdue by{\" \"}\n                            {Math.round(\n                              Number(\n                                new Date()?.getTime() -\n                                  new Date(data?.invoice_date)?.getTime()\n                              ) /\n                                (1000 * 3600 * 24)\n                            )}{\" \"}\n                            days\n                          </p>\n                        )}\n                      </td>\n                      <td>\n                        <span\n                          className={\n                            data?.status?.toLowerCase() === \"active\"\n                              ? styles.active\n                              : styles.canceled\n                          }\n                        >\n                          {data?.status}\n                        </span>\n                      </td>\n                    </>\n                  ))}\n              </tr>\n            ))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <CustomTablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\n              colSpan={3}\n              count={\n                allInvoicesData\n                  ?.filter(\n                    (uData) =>\n                      uData?.customer_id == decryptText(String(currentUserId))\n                  )\n                  ?.filter((status) => status?.payment_status == \"paid\")?.length\n              }\n              rowsPerPage={rowsPerPage}\n              page={page}\n              componentsProps={{\n                select: {\n                  \"aria-label\": \"rows per page\",\n                },\n                actions: {\n                  showFirstButton: true,\n                  showLastButton: true,\n                },\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </tr>\n        </tfoot>\n      </table>\n    </>\n  );\n};\nconst paymentModalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\nconst VendorUserSide = () => {\n  let { currentUserId } = useParams();\n\n  const [currentClientData, setCurrentClientData] = useState({});\n  const [currentCompany, setCurrentCompany] = useState({});\n  const { disableBtn, setDisableBtn, setSnackbar } = UseGlobalContext();\n  const [allData, setAllData] = useState({});\n  let [tab, setTab] = useState(\"unpaid\");\n  const [modalData, setModalData] = useState({});\n  const [sendEmail, setSendEmail] = useState({});\n  const [selectedInvoice, setSelectedInvoice] = useState(\"\");\n  const [contactsData, setContactsData] = useState([]);\n  const [currentInvoicesData, setCurrentInvoicesData] = useState();\n  let { allInvoicesData } = useInvoiceContext();\n  const { allCustomerData } = useCustomerContext();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [filters, setFilters] = useState({});\n  const [paymentSwitch, setPaymentSwitch] = useState(false);\n  // modal\n  const [open, setOpen] = React.useState(false);\n  const decryptText = (encryptText) => {\n    var reb64 = CryptoJS.enc.Hex.parse(encryptText);\n    var bytes = reb64.toString(CryptoJS.enc.Base64);\n    var decrypt = CryptoJS.AES.decrypt(bytes, \"Mirats\");\n    var plain = decrypt.toString(CryptoJS.enc.Utf8);\n    return plain;\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setModalData({});\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const tabData = [\n    {\n      id: 1,\n      tabName: \"unpaid\",\n    },\n    {\n      id: 2,\n      tabName: \"paid\",\n    },\n    {\n      id: 3,\n      tabName: \"payments\",\n    },\n  ];\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  function getCurrentClient(e) {\n    console.log(\"calling\");\n    axios\n      .get(\n        `https://finance.miratsoneservices.com/api/get-customer/${decryptText(\n          String(currentUserId)\n        )}`\n      )\n      .then((res) => {\n        setCurrentClientData(res.data);\n        setAllData((prev) => ({\n          ...prev,\n          customer: res.data,\n        }));\n      });\n  }\n\n  const getCorrectPage = (tab) => {\n    switch (tab) {\n      case \"unpaid\":\n        return <UnpaidInvoice />;\n      case \"paid\":\n        return <PaidInvoice />;\n      // case \"unpaid\":\n      //   return <LiveJobs />;\n\n      default:\n    }\n  };\n  const getCurrentInvoices = () => {\n    axios\n      .get(\n        `https://finance.miratsoneservices.com/api/get-multiple-invoice/${decryptText(\n          String(currentUserId)\n        )}`\n      )\n      .then((res) => {\n        setCurrentInvoicesData(res.data);\n\n        let companies = [];\n        for (const inv of res.data) {\n          axios\n            .get(\n              `https://finance.miratsoneservices.com/api/get-company/${inv?.company_id}`\n            )\n            .then((compRes) => {\n              console.log(compRes);\n              companies.push(compRes.data);\n            });\n        }\n        setAllData((prev) => ({\n          ...prev,\n          invoice: res.data,\n          companies,\n        }));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getCurrentClient();\n    getCurrentInvoices();\n  }, []);\n\n  const handleModalInputChange = (e) => {\n    setModalData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const handleAddContact = (e) => {\n    e.preventDefault();\n    !modalData?.contact_id\n      ? axios\n          .post(`https://finance.miratsoneservices.com/api/create-contact`, {\n            ...modalData,\n            customer_id: decryptText(String(currentUserId)),\n          })\n          .then((res) => {\n            console.log(\"contact added successful\");\n            handleClose();\n            getCurrentClient();\n            setSnackbar({\n              open: true,\n              severity: \"success\",\n              msg: \"Contact Added Successfully!\",\n            });\n          })\n          .catch((err) => console.log(err))\n      : axios\n          .put(\n            `https://finance.miratsoneservices.com/api/update-contact/${modalData?.contact_id}`,\n            modalData\n          )\n          .then((res) => {\n            console.log(\"contact updated successful\");\n            handleClose();\n            getCurrentClient();\n            setSnackbar({\n              open: true,\n              severity: \"success\",\n              msg: \"Contact Updated Successfully!\",\n            });\n          })\n          .catch((err) => console.log(err));\n  };\n  const handleDeleteContact = (data) => {\n    axios\n      .delete(\n        `https://finance.miratsoneservices.com/api/delete-contact/${data?.contact_id}`\n      )\n      .then((res) => {\n        console.log(\"contact deleted successfully\");\n        getCurrentClient();\n        // setSnackbar({\n        //   open: true,\n        //   severity: \"danger\",\n        //   msg: \"Contact Deleted !\",\n        // });\n      })\n      .catch((err) => console.log(\"error in deleting contact\" + err));\n  };\n\n  const handleSelectedInvoice = (e, data) => {\n    setSelectedInvoice(data?.company_id);\n  };\n  const handleSendEmailChange = (e) => {\n    //     {\n    //       \"fromEmail\" : \"fromEmail\",\n    //       \"toEmails\" : \"toEmails\",\n    //       \"password\" : \"password\",\n    //       \"subject\" : \"shiftTime\",\n    //       \"text\" : \"employeeName\"\n    // }\n    setSendEmail((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const handleSendEmailSubmit = (e) => {\n    e.preventDefault();\n    setDisableBtn(true);\n    sendEmail?.text && sendEmail?.subject !== \"\"\n      ? axios\n          .post(\n            \"https://testemailspringboot.de.r.appspot.com/https://finance.miratsoneservices.com/api/v1/vendorinvoice\",\n            {\n              fromEmail: \"varsha.jadhav@miratsinsights.com\",\n              toEmails: \"itzaltuyaar@gmail.com\",\n              password: \"rseciioaxfedbmqy\",\n              customerName: currentClientData?.company_name,\n              ...sendEmail,\n            }\n          )\n          .then((res) => {\n            setSnackbar({\n              open: true,\n              severity: \"success\",\n              msg: \"Email sent Successfully!\",\n            });\n            setDisableBtn(false);\n          })\n      : alert(\"field are empty\");\n  };\n  console.log(allData);\n  console.log(decryptText(String(currentClientData)));\n  console.log(modalData);\n  console.log(currentClientData);\n  console.log(currentCompany);\n  console.log(decryptText(String(currentUserId)));\n\n  return (\n    <>\n      {/* <Header /> */}\n      <div className={styles.mainContainer}>\n        <section className={styles.header}>\n          <img src={miratsLoGo} alt=\"LOGO\" />\n          <h3>{currentClientData?.company_name}</h3>\n        </section>\n        <div className={styles.containerBody}>\n          <div className={styles.bodyLeft}>\n            <div className={styles.bodyLeftTop}>\n              <div className={styles.bodyLeftTopHeader}>\n                <h2>MIRATS (Shell)</h2>\n                <p>\n                  <span>\n                    {/* {allData?.invoice?.length} */}\n                    {\n                      allData?.invoice?.filter((fData) => {\n                        return fData?.payment_status === \"unpaid\";\n                      })?.length\n                    }{\" \"}\n                    Invoices\n                  </span>{\" \"}\n                  TOTAL DUE <br />₹{\" \"}\n                  {allData?.invoice\n                    ?.filter((fInv) => fInv?.payment_status === \"unpaid\")\n                    ?.reduce(\n                      (acc, curr) =>\n                        (acc += curr?.currency_type\n                          ? curr?.current_USD_price * curr?.total_amount\n                          : curr?.total_amount),\n                      0\n                    )\n                    ?.toFixed(2)}\n                </p>\n              </div>\n              <div className={styles.addressContainer}>\n                <div className={styles.addressLeft}>\n                  <h4>To</h4>\n                  <p>1309 Coffeen Avenue,</p>\n                  <p>Sheridan, WY 82801, United</p>\n                  <p>states</p>\n                  <p>phone- (895) 733-6583</p>\n                  <p>email- accounting@mirats.in</p>\n                </div>\n                <div className={styles.addressRight}>\n                  <h4>From</h4>\n                  <p>{allData?.customer?.billing_address?.street1}</p>\n                  <p>{allData?.customer?.billing_address?.street2}</p>\n                  <p>\n                    {allData?.customer?.billing_address?.city},{\" \"}\n                    {allData?.customer?.billing_address?.country}\n                  </p>\n\n                  <p>email- {allData?.customer?.account_email_id}</p>\n                </div>\n              </div>\n            </div>\n            <div className={styles.bodyLeftBottom}>\n              <section className={styles.bodyLeftBottomHeader}></section>\n              <div className={styles.invoice_table}>\n                <div className={styles.tabContainer}>\n                  {tabData.map((i) => {\n                    return (\n                      <>\n                        <h3\n                          className={cx(styles.light, {\n                            [styles.active]:\n                              tab === i.tabName ? styles.active : \"\",\n                          })}\n                          onClick={() => {\n                            setTab(i.tabName);\n                          }}\n                        >\n                          {i.tabName?.toUpperCase()}\n                        </h3>\n                      </>\n                    );\n                  })}\n                </div>\n                <div className={styles.tabComponent}>{getCorrectPage(tab)}</div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.bodyRight}>\n            <section className={styles.bodyRightHeader}>\n              <h5\n                onClick={() => setPaymentSwitch(false)}\n                className={!paymentSwitch ? styles.paymentSwitchActive : \"\"}\n                style={!paymentSwitch ? { color: \"#1765dc\" } : {}}\n              >\n                SEND EMAIL\n              </h5>\n              <h5\n                onClick={() => setPaymentSwitch(true)}\n                className={paymentSwitch ? styles.paymentSwitchActive : \"\"}\n                style={paymentSwitch ? { color: \"#1765dc\" } : {}}\n              >\n                PAYMENTS\n              </h5>\n            </section>\n            <section className={styles.bodyRightTop}>\n              {!paymentSwitch ? (\n                <>\n                  <div className={styles.emailContainer}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"subject\"\n                      name=\"subject\"\n                      onChange={handleSendEmailChange}\n                    />\n                    <textarea\n                      name=\"text\"\n                      placeholder=\"text\"\n                      id=\"\"\n                      onChange={handleSendEmailChange}\n                      cols=\"30\"\n                      rows=\"5\"\n                    ></textarea>\n                  </div>\n                  <div className={styles.btnContainer}>\n                    <button\n                      onClick={handleSendEmailSubmit}\n                      disabled={disableBtn}\n                      style={\n                        disableBtn\n                          ? { cursor: \"not-allowed\" }\n                          : { cursor: \"pointer\" }\n                      }\n                      // style={{ cursor: \"not-allowed\" }}\n                    >\n                      Send\n                    </button>\n                    <button onClick={(e) => setSendEmail({})}>Cancel</button>\n                  </div>\n                </>\n              ) : (\n                <GooglePayButton\n                  environment=\"TEST\"\n                  paymentRequest={{\n                    apiVersion: 2,\n                    apiVersionMinor: 0,\n                    allowedPaymentMethods: [\n                      {\n                        type: \"CARD\",\n                        parameters: {\n                          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                          allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\n                        },\n                        tokenizationSpecification: {\n                          type: \"PAYMENT_GATEWAY\",\n                          parameters: {\n                            gateway: \"example\",\n                            gatewayMerchantId: \"exampleGatewayMerchantId\",\n                          },\n                        },\n                      },\n                    ],\n                    merchantInfo: {\n                      merchantId: \"12345678901234567890\",\n                      merchantName: \"Demo Merchant\",\n                    },\n                    transactionInfo: {\n                      totalPriceStatus: \"FINAL\",\n                      totalPriceLabel: \"Total\",\n                      totalPrice: String(\n                        allData?.invoice\n                          ?.filter((fInv) => fInv?.payment_status === \"unpaid\")\n                          ?.reduce(\n                            (acc, curr) =>\n                              (acc += curr?.currency_type\n                                ? curr?.current_USD_price * curr?.total_amount\n                                : curr?.total_amount),\n                            0\n                          )\n                          ?.toFixed(2)\n                      ),\n                      currencyCode: \"INR\",\n                      countryCode: \"IN\",\n                    },\n                    shippingAddressRequired: false,\n                    callbackIntents: [\"PAYMENT_AUTHORIZATION\"],\n                  }}\n                  onLoadPaymentData={(paymentRequest) => {\n                    console.log(\"load payment data\", paymentRequest);\n                  }}\n                  onPaymentAuthorized={(paymentData) => {\n                    console.log(paymentData);\n                    return { transactionState: \"SUCCESS\" };\n                  }}\n                  existingPaymentMethodRequired=\"false\"\n                  buttonColor=\"white\"\n                  buttonType=\"pay\"\n                />\n              )}\n            </section>\n            <section className={styles.bodyRightBottom}>\n              <div className={styles.bodyRightBottomHeader}>\n                <h4>CONTACTS</h4>\n                {/* <h5>EDIT</h5> */}\n              </div>\n              <div className={styles.displayContacts}>\n                {currentClientData?.contacts?.map((cont, ind) => (\n                  <div className={styles.displayContactsContainer}>\n                    <div className={styles.contactLeft}>\n                      <img src={userProfilePic} alt=\"p\" />\n                    </div>\n                    <div className={styles.contactRight}>\n                      <p>\n                        {cont?.first_name} {cont?.last_name}\n                      </p>\n                      <p>{cont?.contact_phone}</p>\n                      <p>{cont?.contact_email}</p>\n                    </div>\n                    <div className={styles.contactActions}>\n                      <GrEdit\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => {\n                          handleOpen();\n                          setModalData(cont);\n                        }}\n                      />\n                      <RiDeleteBin5Line\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => handleDeleteContact(cont)}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <section className={styles.addContact} onClick={handleOpen}>\n                + Add Contact\n              </section>\n            </section>\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"modal-modal-title\"\n              aria-describedby=\"modal-modal-description\"\n            >\n              <Box sx={myModalStyles}>\n                <div className={styles.modalInnerContainer}>\n                  <div className={styles.inputContainer}>\n                    <section>\n                      <label htmlFor=\"first_name\">First Name</label>\n                    </section>\n                    {\" : \"}\n                    <input\n                      type=\"text\"\n                      name=\"first_name\"\n                      value={modalData?.first_name}\n                      onChange={handleModalInputChange}\n                    />\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <section>\n                      <label htmlFor=\"last_name\">Last name</label>{\" \"}\n                    </section>\n                    {\" : \"}\n                    <input\n                      type=\"text\"\n                      name=\"last_name\"\n                      value={modalData?.last_name}\n                      onChange={handleModalInputChange}\n                    />\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <section>\n                      <label htmlFor=\"contact_email\">Email</label>{\" \"}\n                    </section>\n                    {\" : \"}\n                    <input\n                      type=\"text\"\n                      name=\"contact_email\"\n                      value={modalData?.contact_email}\n                      onChange={handleModalInputChange}\n                    />\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <section>\n                      <label htmlFor=\"contact_phone\">Phone</label>{\" \"}\n                    </section>\n                    {\" : \"}\n                    <input\n                      type=\"text\"\n                      name=\"contact_phone\"\n                      value={modalData?.contact_phone}\n                      onChange={handleModalInputChange}\n                    />\n                  </div>\n\n                  <div className={styles.inputContainer}>\n                    <button onClick={handleClose}>Cancel</button>\n                    <button onClick={handleAddContact}>Upload</button>\n                  </div>\n                </div>\n              </Box>\n            </Modal>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VendorUserSide;\n"],"names":["useState","anchorEl","setAnchorEl","useAuthState","auth","user","open","Boolean","handleClose","className","styles","src","logo","alt","to","isActive","Box","Tooltip","title","IconButton","onClick","event","currentTarget","size","sx","ml","undefined","bordered","zoomed","Menu","id","onClose","PaperProps","elevation","overflow","filter","mt","width","height","mr","content","display","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","email","signOut","then","data","ListItemIcon","Logout","fontSize","CustomerContextProvider","createContext","useCustomerContext","useContext","children","navigate","useNavigate","setSnackbar","UseGlobalContext","billing_address","place_of_supply","shipping_address","customerInputData","setCustomerInputData","disableBTN","setDisableBTN","allCustomerData","setAllCustomerData","getAllCustomerData","useCallback","axios","res","catch","err","console","log","useEffect","value","handleChange","e","prev","target","name","customerBillingAddressChange","customerShippingAddressChange","submitAddCustomer","customer_id","tax_information","bank_details","severity","msg","Provider","GlobalContextProvider","bankTransaction","setBankTransaction","snackbar","getingImgFromFolder","setGetingImgFromFolder","disableBtn","setDisableBtn","getBankTransaction","listAll","ref","storage","prefixes","forEach","folderRef","items","itemref","Alert","React","props","variant","reason","autoHideDuration","InvoiceContextProvider","useInvoiceContext","allCompanyData","setAllCompanyData","signatureData","setSignatureData","allInvoicesData","setAllInvoicesData","fetchAllInvoicesData","reverse","fetchAllCompanyData","fetchAllSignatureData","CustomTablePagination","styled","TablePaginationUnstyled","myModalStyles","left","border","boxShadow","pt","px","pb","myPaymentModalStyles","UnpaidInvoice","currentUserId","useParams","page","setPage","rowsPerPage","setRowsPerPage","setOpen","modalData","setModalData","decryptText","encryptText","bytes","CryptoJS","toString","elt","document","getElementById","wb","utils","sheet","writeFile","uData","String","status","payment_status","slice","map","ind","toLowerCase","cust","elm","invoice_date","invoice_number","currency_type","total_amount","toFixed","toUpperCase","Math","round","Number","Date","getTime","handleOpen","rowsPerPageOptions","label","colSpan","count","length","componentsProps","select","actions","showFirstButton","showLastButton","onPageChange","newPage","onRowsPerPageChange","parseInt","Modal","style","textAlign","environment","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","current_USD_price","currencyCode","countryCode","shippingAddressRequired","callbackIntents","onLoadPaymentData","onPaymentAuthorized","paymentData","transactionState","existingPaymentMethodRequired","buttonColor","buttonType","PaidInvoice","filters","handleExportToExcel","fontWeight","sData","currentClientData","setCurrentClientData","currentCompany","allData","setAllData","tab","setTab","sendEmail","setSendEmail","setCurrentInvoicesData","paymentSwitch","setPaymentSwitch","getCurrentClient","customer","companies","inv","company_id","compRes","push","invoice","handleModalInputChange","handleSendEmailChange","miratsLoGo","company_name","fData","fInv","reduce","acc","curr","street1","street2","city","country","account_email_id","tabName","i","cx","getCorrectPage","color","placeholder","onChange","cols","rows","preventDefault","text","subject","fromEmail","toEmails","password","customerName","alert","disabled","cursor","contacts","cont","userProfilePic","first_name","last_name","contact_phone","contact_email","contact_id","htmlFor"],"sourceRoot":""}