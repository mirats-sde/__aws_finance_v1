{"version":3,"file":"static/js/3001.f4832ee5.chunk.js","mappings":"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","sources":["pages/customers/customerContex/CustomerContext.js","pages/globalContext/GlobalContext.js"],"sourcesContent":["import axios from \"axios\";\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UseGlobalContext } from \"../../globalContext/GlobalContext\";\nconst CustomerContextProvider = createContext();\nexport const useCustomerContext = () => {\n  return useContext(CustomerContextProvider);\n};\nconst CustomerContext = ({ children }) => {\n  const navigate = useNavigate();\n  const { setSnackbar } = UseGlobalContext();\n  const [customerInputData, setCustomerInputData] = useState({\n    billing_address: { place_of_supply: \"INTERNATIONAL\" },\n    shipping_address: { place_of_supply: \"INTERNATIONAL\" },\n  });\n  const [disableBTN, setDisableBTN] = useState(false);\n  const [allCustomerData, setAllCustomerData] = useState([]);\n\n  const handleChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const customerBillingAddressChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      billing_address: {\n        ...prev.billing_address,\n        [e.target.name]: e.target.value,\n      },\n    }));\n  };\n  const customerShippingAddressChange = (e) => {\n    setCustomerInputData((prev) => ({\n      ...prev,\n      shipping_address: {\n        ...prev.shipping_address,\n        [e.target.name]: e.target.value,\n      },\n    }));\n  };\n  const getAllCustomerData = useCallback(() => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-customer\")\n      .then((res) => {\n        setAllCustomerData(res?.data);\n      })\n      .catch((err) => console.log(err));\n  }, [allCustomerData]);\n  useEffect(() => {\n    getAllCustomerData();\n  }, []);\n  const submitAddCustomer = () => {\n    console.log(\"submit\");\n    setDisableBTN(true);\n    navigate(\"/clients\");\n    axios\n      .post(\n        \"https://finance.miratsoneservices.com/api/create-customer\",\n        customerInputData\n      )\n      .then((res) => {\n        console.log(res.data);\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-tax-information\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.tax_information,\n          }\n        );\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-billing-address\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.billing_address,\n          }\n        );\n        axios.post(\n          \"https://finance.miratsoneservices.com/api/create-shipping_address\",\n          {\n            customer_id: res.data.customer_id,\n            ...customerInputData?.shipping_address,\n          }\n        );\n        axios\n          .post(\n            \"https://finance.miratsoneservices.com/api/create-customer-bank-details\",\n            {\n              customer_id: res.data.customer_id,\n              ...customerInputData?.bank_details,\n            }\n          )\n          .then(\n            (data) => getAllCustomerData(),\n            setDisableBTN(false),\n            setSnackbar({\n              open: true,\n              severity: \"success\",\n              msg: \"Customer Added Successfully!\",\n            })\n          );\n      })\n      .catch((err) => console.log(err));\n\n    //   .catch((err) => console.log(err));\n\n    // axios\n    //   .post(\"https://finance.miratsoneservices.com/api/create-customer\", customerInputData)\n    //   .then(() => alert(\"success\"))\n    //   .catch((err) => console.log(err));\n  };\n  const value = {\n    handleChange,\n    disableBTN,\n    setDisableBTN,\n    customerInputData,\n    getAllCustomerData,\n    setCustomerInputData,\n    customerBillingAddressChange,\n    customerShippingAddressChange,\n    submitAddCustomer,\n    allCustomerData,\n    setAllCustomerData,\n  };\n  return (\n    <CustomerContextProvider.Provider value={value}>\n      {children}\n    </CustomerContextProvider.Provider>\n  );\n};\n\nexport default CustomerContext;\n","import axios from \"axios\";\nimport { listAll, ref } from \"firebase/storage\";\nimport React, { createContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { storage } from \"../../FirebaseConfig\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nconst GlobalContextProvider = createContext();\nexport const UseGlobalContext = () => {\n  return useContext(GlobalContextProvider);\n};\nconst GlobalContext = ({ children }) => {\n  const [bankTransaction, setBankTransaction] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"\",\n    msg: \"\",\n  });\n  const [getingImgFromFolder, setGetingImgFromFolder] = useState([]);\n  const [exportExcel, setExportExcel] = useState([]);\n  const [disableBtn, setDisableBtn] = useState(false);\n\n  const getBankTransaction = () => {\n    axios\n      .get(\"https://finance.miratsoneservices.com/api/get-bank-transaction\")\n      .then((data) => {\n        setBankTransaction(data?.data);\n      });\n  };\n\n  useEffect(() => {\n    getBankTransaction();\n    listAll(ref(storage, ref(`bank_statement`))).then((res) => {\n      res.prefixes.forEach((folderRef) => {\n        setGetingImgFromFolder((prev) => [...prev, folderRef.name]);\n      });\n      res.items.forEach((itemref) => {\n        console.log(itemref);\n      });\n    });\n  }, []);\n\n  // console.log(bankTransaction);\n  let name = \"sonumonu\";\n  const value = {\n    bankTransaction,\n    name,\n    getingImgFromFolder,\n    setGetingImgFromFolder,\n    getBankTransaction,\n    setSnackbar,\n    disableBtn,\n    setDisableBtn,\n  };\n  // snackbar\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbar({ open: false });\n  };\n  return (\n    <GlobalContextProvider.Provider value={value}>\n      {children}\n      <Snackbar\n        open={snackbar?.open}\n        autoHideDuration={4000}\n        onClose={handleClose}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={snackbar?.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar?.msg}\n        </Alert>\n      </Snackbar>\n    </GlobalContextProvider.Provider>\n  );\n};\n\nexport default GlobalContext;\n"],"names":["CustomerContextProvider","createContext","useCustomerContext","useContext","children","navigate","useNavigate","setSnackbar","UseGlobalContext","useState","billing_address","place_of_supply","shipping_address","customerInputData","setCustomerInputData","disableBTN","setDisableBTN","allCustomerData","setAllCustomerData","getAllCustomerData","useCallback","axios","then","res","data","catch","err","console","log","useEffect","value","handleChange","e","prev","target","name","customerBillingAddressChange","customerShippingAddressChange","submitAddCustomer","customer_id","tax_information","bank_details","open","severity","msg","Provider","GlobalContextProvider","bankTransaction","setBankTransaction","snackbar","getingImgFromFolder","setGetingImgFromFolder","disableBtn","setDisableBtn","getBankTransaction","listAll","ref","storage","prefixes","forEach","folderRef","items","itemref","Alert","React","props","elevation","variant","handleClose","event","reason","autoHideDuration","onClose","sx","width"],"sourceRoot":""}