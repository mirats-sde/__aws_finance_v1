{"version":3,"file":"static/js/17.a10fccf0.chunk.js","mappings":"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","sources":["webpack://invoive/./src/pages/login/Login.module.css?c066","pages/login/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainRegisaterConatainer\":\"Login_mainRegisaterConatainer__kpWbC\",\"innerRegisterContainer\":\"Login_innerRegisterContainer__lykbB\",\"registerRow\":\"Login_registerRow__EHK7u\"};","import React, { useState } from \"react\";\nimport styles from \"./Login.module.css\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../FirebaseConfig\";\nimport { Input, Dropdown, Spacer, Button } from \"@nextui-org/react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { query, collection, where, getDocs } from \"firebase/firestore\";\nimport { firestoredb } from \"../../FirebaseConfig\";\nimport Stack from \"@mui/material/Stack\";\n// import Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nconst Login = () => {\n  const [loginData, setLoginData] = useState({});\n  const navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const q = query(\n      collection(firestoredb, \"miratsinsights\", \"peoples\", \"employee\"),\n      where(\"email\", \"==\", loginData?.email),\n      where(\"Portal_Access.finance_portal\", \"==\", true)\n    );\n    const querysnapshot = await getDocs(q);\n    let flag = false;\n    if (querysnapshot.docs.length) {\n      flag = true;\n      signInWithEmailAndPassword(auth, loginData?.email, loginData?.password)\n        .then(() => {\n          console.log(\"success\");\n          setOpen({\n            open: true,\n            severity: \"success\",\n            msg: \"Login Successful!!!\",\n          });\n          setTimeout(() => {\n            navigate(\"/\");\n          }, 1500);\n        })\n        .catch((err) => {\n          switch (err.message) {\n            case \"Firebase: Error (auth/user-not-found).\":\n              setOpen({\n                open: true,\n                severity: \"error\",\n                msg: \"User not found!!!\",\n              });\n              break;\n            case \"Firebase: Error (auth/wrong-password).\":\n              setOpen({\n                open: true,\n                severity: \"error\",\n                msg: \"Wrong Password!!!\",\n              });\n              break;\n            default:\n              setOpen({\n                open: true,\n                severity: \"error\",\n                msg: err.message,\n              });\n              break;\n          }\n        });\n    }\n    if (!flag) {\n      // setError(\"You cannot access the portal because you are not an admin\");\n      setOpen({\n        open: true,\n        severity: \"error\",\n        msg: \"You cannot access the portal because you are not an admin\",\n      });\n    }\n    // else {\n    //   console.log(\"You are not authenticated to access this portal!\");\n    // }\n    // signInWithEmailAndPassword(auth, loginData?.email, loginData?.password)\n    //   .then((data) => (data?.user ? navigate(\"/\") : \"\"))\n    //   .catch((err) => console.log(err.message));\n  };\n  const handleChange = (e) => {\n    setLoginData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  //   snackbar\n  const [open, setOpen] = useState({\n    open: false,\n    severity: \"\",\n    msg: \"\",\n  });\n  // snackbar click function\n  const handleClick = () => {\n    setOpen({ ...open, open: true });\n  };\n  const snackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen({ ...open, open: false });\n  };\n\n  const handleClose = () => {\n    setOpen({ open: false });\n  };\n  // snackbar alert function\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n  //   console.log(loginData);\n  return (\n    <div className={styles.mainRegisaterConatainer}>\n      <div className={styles.innerRegisterContainer}>\n        <h1 style={{ color: \"#2a2a2b\" }}>LogIn</h1>\n        <form onSubmit={handleSubmit}>\n          <div className={styles.registerRow}>\n            <Input\n              required\n              bordered\n              labelPlaceholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              css={{ width: \"100%\" }}\n            />\n          </div>\n\n          <div className={styles.registerRow}>\n            <Input.Password\n              labelPlaceholder=\"Password\"\n              bordered\n              name=\"password\"\n              onChange={handleChange}\n              css={{ width: \"100%\" }}\n            />\n          </div>\n          {/* <p>\n            or{\" \"}\n            <Link to=\"/register\" style={{ textDecoration: \"none\" }}>\n              Register\n            </Link>{\" \"}\n          </p> */}\n          <Button\n            type=\"submit\"\n            css={{ background: \"#333435\" }}\n            size=\"lg\"\n            onClick={handleSubmit}\n          >\n            LogIn\n          </Button>\n        </form>\n      </div>\n      <Snackbar\n        open={open?.open}\n        autoHideDuration={4000}\n        onClose={handleClose}\n        bodyStyle={{ maxWidth: \"100%\" }}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={open?.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {open?.msg}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["useState","loginData","setLoginData","navigate","useNavigate","handleSubmit","e","preventDefault","q","query","collection","firestoredb","where","email","getDocs","querysnapshot","flag","docs","length","signInWithEmailAndPassword","auth","password","then","console","log","setOpen","open","severity","msg","setTimeout","catch","err","message","handleChange","prev","target","name","value","handleClose","Alert","React","props","ref","elevation","variant","className","styles","style","color","onSubmit","required","bordered","labelPlaceholder","type","onChange","css","width","background","size","onClick","Snackbar","autoHideDuration","onClose","bodyStyle","maxWidth","sx"],"sourceRoot":""}